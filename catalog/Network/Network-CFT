AWSTemplateFormatVersion: '2010-09-09'
Description: CF Template for creating the VPC infra.

Metadata:

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: General Stack Details
      Parameters:
        - CustomerName
        - Environment
        - OperatorEmail

    ParameterLabels:
      VpcCidr:
        default: VpcCidr
      Environment:
        default: Environment
      CustomerName:
        default: CustomerName


Outputs:
  VpcId:
    Description: VPC created
    Value: !Ref VPC1
  Elbsubnet1:
    Description: Public subnet 1 from  VPC1
    Value: !Ref ElbSubnet1
  Elbsubnet2:
    Description: Public subnet 2 from  VPC1
    Value: !Ref ElbSubnet2
  Elbsubnet3:
    Description: Public subnet 3 from  VPC1
    Value: !Ref ElbSubnet3
  WebSubnet1:
    Description: Public subnet 1 from  VPC1
    Value: !Ref WebSubnet1
  WebSubnet2:
    Description: Public subnet 2 from  VPC1
    Value: !Ref WebSubnet2
  WebSubnet3:
    Description: Public subnet 3 from  VPC1
    Value: !Ref WebSubnet3
  DBsubnet1:
    Description: Private Subnet 1 from  VPC1
    Value: !Ref DbSubnet1
  DBsubnet2:
    Description: Private Subnet 2 from  VPC1
    Value: !Ref DbSubnet2
  DBsubnet3:
    Description: Private Subnet 3 from  VPC1
    Value: !Ref DbSubnet3

Parameters:
  
  Cidr:
    Type: String
    Description: "CIDR Block to use for VPC"
    Default: "10.7.0.0/16"

  Environment:
    Description: "Enter Env code for prefix, ex: test,stag,stag-srvc,etc."
    AllowedValues: 
      - development
      - staging
      - production
    Type: String

  CustomerName:
    Description: "Enter the CustomerName ex: ibexlabs."
    Default: 'ibexlabs'
    Type: String

Resources:

  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock:
        Ref: Cidr
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-vpc"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment


  InternetGateway1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - 
          Key: Name
          Value: !Sub "${CustomerName}-${Environment}-IGW1"
        - 
          Key: CustomerName
          Value: !Ref CustomerName
        - 
          Key: Environment
          Value: !Ref Environment
          


  GatewayToInternet1:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC1
      InternetGatewayId:
        Ref: InternetGateway1
        


  ElbSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 0, !Cidr [ !GetAtt VPC1.CidrBlock, 1, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-public-elb-subnet-01"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment

  ElbSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 1, !Cidr [ !GetAtt VPC1.CidrBlock, 2, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-public-elb-subnet-02"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment
        
  ElbSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 2, !Cidr [ !GetAtt VPC1.CidrBlock, 3, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-public-elb-subnet-03"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment

  WebSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 3, !Cidr [ !GetAtt VPC1.CidrBlock, 4, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-private-web-subnet-01"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment
  WebSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 4, !Cidr [ !GetAtt VPC1.CidrBlock, 5, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-private-web-subnet-02"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment
  WebSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 5, !Cidr [ !GetAtt VPC1.CidrBlock, 6, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-private-web-subnet-03"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment

  DbSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 6, !Cidr [ !GetAtt VPC1.CidrBlock, 7, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-private-db-subnet-01"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment

  DbSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 7, !Cidr [ !GetAtt VPC1.CidrBlock, 8, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-private-db-subnet-02"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment
    
  DbSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC1
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      CidrBlock: !Select [ 8, !Cidr [ !GetAtt VPC1.CidrBlock, 9, 8 ]]
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-private-db-subnet-03"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment

  ElbRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC1
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-public-elb-rt-01"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment


  AppRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC1
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-private-app-rt-01"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment


  ElbSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: ElbSubnet1
      RouteTableId:
        Ref: ElbRouteTable1
  ElbSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: ElbSubnet2
      RouteTableId:
        Ref: ElbRouteTable1
  ElbSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: ElbSubnet3
      RouteTableId:
        Ref: ElbRouteTable1

  WebSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WebSubnet1
      RouteTableId:
        Ref: AppRouteTable1
  WebSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WebSubnet2
      RouteTableId:
        Ref: AppRouteTable1
  WebSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: WebSubnet3
      RouteTableId:
        Ref: AppRouteTable1

  DbRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC1
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-private-db-rt-01"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment


  DbSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: DbSubnet1
      RouteTableId:
        Ref: DbRouteTable1
  DbSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: DbSubnet2
      RouteTableId:
        Ref: DbRouteTable1
  DbSubnetRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: DbSubnet3
      RouteTableId:
        Ref: DbRouteTable1

  ElbRoute1:
    Type: AWS::EC2::Route
    DependsOn: 
      - InternetGateway1
      - GatewayToInternet1
    Properties:
      RouteTableId:
        Ref: ElbRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway1
  ElbNetworkAcl1:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: VPC1
      Tags:
      - Key: Name
        Value: !Sub "${CustomerName}-${Environment}-Networkacl1"
      - Key: CustomerName
        Value: !Ref CustomerName
      - Key: Environment
        Value: !Ref Environment
  ElbInboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: ElbNetworkAcl1
      RuleNumber: '99'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'false'
      CidrBlock: 10.0.0.0/0
  ElbOutboundPublicNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: ElbNetworkAcl1
      RuleNumber: '99'
      Protocol: "-1"
      RuleAction: allow
      Egress: 'true'
      CidrBlock: 0.0.0.0/0   
      
  ElbSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: ElbSubnet1
      NetworkAclId:
        Ref: ElbNetworkAcl1
  ElbSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: ElbSubnet2
      NetworkAclId:
        Ref: ElbNetworkAcl1
  ElbSubnetNetworkAclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: ElbSubnet3
      NetworkAclId:
        Ref: ElbNetworkAcl1

  WebSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: WebSubnet1
      NetworkAclId:
        Ref: ElbNetworkAcl1
  WebSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: WebSubnet2
      NetworkAclId:
        Ref: ElbNetworkAcl1
  WebSubnetNetworkAclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: WebSubnet3
      NetworkAclId:
        Ref: ElbNetworkAcl1

  DbSubnetNetworkAclAssociation1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: DbSubnet1
      NetworkAclId:
        Ref: ElbNetworkAcl1
  DbSubnetNetworkAclAssociation2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: DbSubnet2
      NetworkAclId:
        Ref: ElbNetworkAcl1
  DbSubnetNetworkAclAssociation3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: DbSubnet3
      NetworkAclId:
        Ref: ElbNetworkAcl1
        
  NAT1:
    DependsOn: GatewayToInternet1
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
         - NATEIP
         - AllocationId
      SubnetId:
        Ref: ElbSubnet1
  NATEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: DbRouteTable1
      DestinationCidrBlock:  0.0.0.0/0
      NatGatewayId:
        Ref: NAT1
  NAT2:
    DependsOn: GatewayToInternet1
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
         - NATEIP2
         - AllocationId
      SubnetId:
        Ref: ElbSubnet2  
  NATEIP2:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AppRouteTable1
      DestinationCidrBlock: 0.0.0.0/0 
      NatGatewayId:
        Ref: NAT2
