AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template for ElasticBeanstalk with a PHP, Tomcat, .
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Environment Details
      Parameters:
        - CustName
        - Application
        - EnvironmentName
    - Label:
        default: Network Details [ Select the VPC and required subnets ]
      Parameters:
        - VPC
        - AppSubnet1
        - AppSubnet2
        - ElbSubnet1
        - ElbSubnet2
        - Ec2SecurityGroup
        - LbSecurityGroup
        - SSLCertificateArn

    - Label:
        default: Elastic beanstalk
      Parameters:
        - AutoScalingGroupMinSize
        - AutoScalingGroupMaxSize
        - InstanceType
        - AppInstanceProfile
        - ElasticBeanstalkServiceRole
Parameters:
  LbSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Default: ''  
  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Default: ''    
  ElasticBeanstalkServiceRole:
    Type: String
    Default: ElasticBeanstalk_ServiceRole     
  VPC:
    Description: The Vpc Id of an existing Vpc.
    Type: AWS::EC2::VPC::Id
  CustName:
    Description: Enter the name of the Customer
    Type: String
  SSLCertificateArn:
    Description: The SSL/TLS certificate ARN
    Type: String
    MinLength: 0
    MaxLength: 2048
    Default: ''   
  EnvironmentName:
    Description: "Enter Env code for prefix, ex: test,stag,prod,etc."
    Type: String 

  AppInstanceProfile:
   Type: String
   Default: Elasticbeanstalk_Instanceprofile

  HealthReportingType:
    Type: String
    Description: Health reporting system (basic or enhanced). Enhanced health reporting
      requires a service role and a version 2 platform configuration.
    AllowedValues:
    - basic
    - enhanced
    Default: enhanced

  RollingUpdateEnabled:
    Type: String
    Description: If true, Frequent updates to your Elastic Beanstalk software application and you want to avoid application downtime.
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'true'

  RollingUpdateType:
    Type: String
    Description: Time-based rolling updates apply a PauseTime between batches. Health-based
      rolling updates wait for new instances to pass health checks before moving on
      to the next batch. Immutable updates launch a full set of instances in a new
      AutoScaling group.
    AllowedValues:
    - Time
    - Health
    - Immutable
    Default: Immutable

  DeploymentPolicy:
    Type: String
    Description: Choose a deployment policy for application version deployments.
    AllowedValues:
    - AllAtOnce
    - Rolling
    - RollingWithAdditionalBatch
    - Immutable
    Default: Immutable

  InstanceType:
    Description: EC2 instance type.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.small
      - t2.micro
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge

  Application: 
    Description: source bundle S3 key for different applications
    Type: String
    AllowedValues:
      - Php
      - JavaTomcat
      - Nodejs
    Default: Php

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the Elastic
      Beanstalk hosts
    Type: AWS::EC2::KeyPair::KeyName

  Schedule:
    Description: The time the patching of the EB environment to be done. It is supposed to be in this format *DAY:HH:MM* example - SAT:12:00
    Type: String
    Default: ''
  
  AutoScalingGroupMinSize:
    Description: Minimum number of instances you want in your Auto Scaling group.
    Type: Number
    Default: '1'
    ConstraintDescription: must be a valid integer value.

  AutoScalingGroupMaxSize:
    Description: Maximum number of instances you want in your Auto Scaling group.
    Type: Number
    Default: '6'
    ConstraintDescription: must be a valid integer value.

  IsNewApplication:
    Type: String
    Description: If yes, It will launch the new application and create environment inside it.
    AllowedValues:
    - 'yes'
    - 'no'
    Default: 'yes'
    
  UpdateLevel:
    Description: Type of patch that needs to be updated
    Type: String
    Default: 'minor'
  
  AppSubnet1:
    Type: 'AWS::EC2::Subnet::Id'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
  AppSubnet2:
    Type: 'AWS::EC2::Subnet::Id'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
      
  ElbSubnet1:
    Type: 'AWS::EC2::Subnet::Id'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
  ElbSubnet2:
    Type: 'AWS::EC2::Subnet::Id'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
Mappings:
  Appmap:
    Php:
      S3Objectname: php-v1.zip
    JavaTomcat:
      S3Objectname: java7-tomcat7.zip
    Nodejs:
      S3Objectname: nodejs-v1.zip

  SolutionStackmap:
    Php:
      SolutionStackName: '64bit Amazon Linux 2018.03 v2.9.0 running PHP 7.3'
    JavaTomcat:
      SolutionStackName: '64bit Amazon Linux 2018.03 v3.3.0 running Tomcat 8 Java 8'
    Nodejs:
      SolutionStackName: '64bit Amazon Linux 2018.03 v4.11.0 running Node.js'

Conditions:
  CreateApplicationnew: !Equals [ !Ref IsNewApplication, "yes" ]
  CreateApplication: !Not [ !Equals [ !Ref IsNewApplication, "no" ] ]
  TlsEnabled: !Not [ !Equals [ !Ref SSLCertificateArn, "" ] ]

Resources:

  sampleApplication:
    Type: AWS::ElasticBeanstalk::Application
    Condition: CreateApplicationnew
    Properties:
      Description: AWS Elastic Beanstalk Sample Application
      ApplicationName: !Sub "${CustName}-${Application}"

  sampleApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !If [ CreateApplication, !Ref sampleApplication, !Sub "${CustName}-${Application}" ]       
      Description: AWS ElasticBeanstalk Sample Application Version
      SourceBundle:
        S3Bucket: ibexcatalogapplication
        S3Key: !FindInMap [ Appmap , !Ref Application, S3Objectname ] 

  sampleConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    Properties:
      ApplicationName: !If [ CreateApplication, !Ref sampleApplication, !Sub "${CustName}-${Application}"  ] 
      Description: AWS ElasticBeanstalk Sample Configuration Template
      OptionSettings:
      - Namespace: aws:elbv2:loadbalancer
        OptionName: ManagedSecurityGroup
        Value: !Ref LbSecurityGroup
      - Namespace: aws:ec2:vpc
        OptionName: VPCId
        Value: 
          Ref: VPC
      - Namespace: aws:ec2:vpc
        OptionName: Subnets
        Value: !Join [ ",", [ !Ref AppSubnet1, !Ref AppSubnet2 ] ]
      - Namespace: aws:ec2:vpc
        OptionName: ELBSubnets
        Value: !Join [",", [ !Ref ElbSubnet1, !Ref ElbSubnet2 ] ]
      - Namespace: !Sub
        - "aws:elbv2:listener:${ListenPort}"
        - ListenPort: '80'
        OptionName: Protocol
        Value: HTTP
      - Namespace: !Sub
        - "aws:elbv2:listener:${ListenPort}"
        - ListenPort: !If [ TlsEnabled, 443, 80 ]
        OptionName: SSLCertificateArns
        Value:
          Ref: SSLCertificateArn
      - Namespace: !Sub
        - "aws:elbv2:listener:${ListenPort}"
        - ListenPort: !If [ TlsEnabled, 443, 80 ]
        OptionName: Protocol
        Value: !If [ TlsEnabled, HTTPS, HTTP ]  
      - Namespace: aws:autoscaling:updatepolicy:rollingupdate
        OptionName: RollingUpdateEnabled
        Value:
          Ref: RollingUpdateEnabled                    
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: !Ref AutoScalingGroupMinSize
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: !Ref AutoScalingGroupMaxSize
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: LoadBalancerType
        Value: application
      - Namespace: aws:elasticbeanstalk:healthreporting:system
        OptionName: SystemType
        Value:
          Ref: HealthReportingType   
      - Namespace: aws:elasticbeanstalk:command
        OptionName: DeploymentPolicy
        Value:
          Ref: DeploymentPolicy           
      - Namespace: aws:autoscaling:updatepolicy:rollingupdate
        OptionName: RollingUpdateType
        Value: Health              
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: InstanceType
        Value: !Ref InstanceType
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: ServiceRole
        Value:
          Ref: ElasticBeanstalkServiceRole
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: EC2KeyName
        Value:
          Ref: KeyName
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value: !Ref AppInstanceProfile
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: SecurityGroups
        Value: !Ref Ec2SecurityGroup
      - Namespace: aws:elasticbeanstalk:cloudwatch:logs
        OptionName: StreamLogs
        Value: 'true'
      - Namespace: aws:elasticbeanstalk:cloudwatch:logs
        OptionName: RetentionInDays
        Value: 7
      - Namespace: aws:elasticbeanstalk:managedactions:platformupdate
        OptionName: UpdateLevel
        Value: !Ref UpdateLevel
      - Namespace: aws:elasticbeanstalk:managedactions:platformupdate
        OptionName: InstanceRefreshEnabled
        Value: 'false'
      - Namespace: aws:elasticbeanstalk:managedactions
        OptionName: PreferredStartTime
        Value: !Ref Schedule
      SolutionStackName: !FindInMap [ SolutionStackmap , !Ref Application, SolutionStackName ] 

  sampleEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      CNAMEPrefix: !Sub "${EnvironmentName}-${Application}"
      ApplicationName: !Sub "${CustName}-${Application}"
      EnvironmentName: !Sub "${CustName}-${EnvironmentName}-${Application}"
      Description: AWS ElasticBeanstalk Sample Environment
      TemplateName:
        Ref: sampleConfigurationTemplate
      VersionLabel:
        Ref: sampleApplicationVersion
